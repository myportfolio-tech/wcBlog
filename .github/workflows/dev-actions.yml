name: Main DevOps

on:
  push:
    branches: ["devops"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          cd ./services/web/
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd ./services/web/
          python -m pytest

# name: Build Docker Image

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./services/web/
#     steps:
#       - uses: actions/checkout@v3
#       - name: Declare Variables
#         id: vars
#         shell: bash
#         run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
#       - name: Build & Push Docker image - Flask App
#         run: |
#           echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "eduar2020" --password-stdin
#           docker image build -t eduar2020/weblog:${{ steps.vars.outputs.sha_short }} .
#           docker push eduar2020/weblog:${{ steps.vars.outputs.sha_short }}
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Rollout Deployment Version
#         uses: kodermax/kubectl-aws-eks@master
#         env:
#           KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
#         with:
#           args: -n main set image deployment/weknowx weknowx=eduar2020/weblog:${{ steps.vars.outputs.sha_short }}
