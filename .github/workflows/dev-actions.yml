name: Main DevOps

on:
  push:
    branches: ["devops"]

jobs:
  code-testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          cd ./services/web/
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd ./services/web/
          python -m pytest

  docker-build:
    needs: code-testing
    runs-on: ubuntu-latest
    continue-on-error: true
    if: ${{ github.event_name == 'push' && contains( github.event.head_commit.message, 'docker-build') }}
    defaults:
      run:
        working-directory: ./services/web/
    steps:
      - uses: actions/checkout@v3
      - name: Declare Variables
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build & Push Docker image - Flask App
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "eduar2020" --password-stdin
          docker image build -t eduar2020/weblog:${{ steps.vars.outputs.sha_short }} .
          docker push eduar2020/weblog:${{ steps.vars.outputs.sha_short }}

  eks-push:
    needs: docker-build
    runs-on: ubuntu-latest
    continue-on-error: false
    if: ${{ github.event_name == 'push' && contains( github.event.head_commit.message, 'eks-push') }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Rollout Deployment Version
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
        with:
          args: -n main set image deployment/weknowx weknowx=eduar2020/weblog:${{ steps.vars.outputs.sha_short }}

  slackNotification:
    name: Slack Notification
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        env:
          SLACK_CHANNEL: pipelines
          SLACK_COLOR: "good" ## ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_ICON_EMOJI: ":nerd_face:"
          SLACK_MESSAGE: "The Docker image weknowx=eduar2020/weblog:${{ steps.vars.outputs.sha_short }} pushed"
          SLACK_TITLE: Build & Push Complete
          SLACK_USERNAME: pipe-pot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
